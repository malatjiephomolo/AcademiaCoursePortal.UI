@page "/"
@using AcademiaCoursePortal.Client.Services
@using AcademiaCoursePortal.UI.Services
@using Blazored.LocalStorage
@inject AuthenticationService AuthenticationService
@inject NavigationManager Navigation
@inject ILocalStorageService localStorage

<h3>Login</h3>

@if (!string.IsNullOrEmpty(successMessage))
{
    <div class="alert alert-success">
        @successMessage
    </div>
}

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger">
        @errorMessage
    </div>
}

<form @onsubmit="HandleLogin">
    <div class="form-group">
        <label for="username">Username</label>
        <input type="text" id="username" class="form-control" @bind="username" required />
    </div>
    <div class="form-group">
        <label for="password">Password</label>
        <input type="password" id="password" class="form-control" @bind="password" required />
    </div>
    <button type="submit" class="btn btn-primary mt-3 mb-3" disabled="@isSubmitting">Login</button>
    
</form>
<button class="btn btn-primary mt-3 mb-3" @onclick="GoToRegister" disabled="@isSubmitting">Register</button>
@code {
    private string? username;
    private string? password;
    private bool isSubmitting;
    private string? errorMessage;
    private string? successMessage;

    private async Task HandleLogin()
    {
        isSubmitting = true;
        errorMessage = null;
        successMessage = null;

        try
        {
            var token = await AuthenticationService.LoginAsync(username ?? string.Empty, password ?? string.Empty);
            if (!string.IsNullOrEmpty(token))
            {
                // Store token in local storage
                await localStorage.SetItemAsync("authToken", token);
                Navigation.NavigateTo("/home"); // Redirect to the home page or another desired page
                successMessage = "Login successful!";
            }
            else
            {
                errorMessage = "Invalid credentials.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = "Error during login.";
            Console.WriteLine("Error during login: " + ex.Message);
        }
        finally
        {
            isSubmitting = false;
        }
    }
    private void GoToRegister()
    {
        Navigation.NavigateTo("/register");
    }
}
